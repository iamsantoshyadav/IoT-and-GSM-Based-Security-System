
security.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000484  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003e  00800060  00000484  00000518  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080009e  0080009e  00000556  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000556  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000004b  00000000  00000000  00000576  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e4b  00000000  00000000  000005c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000168  00000000  00000000  0000140c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000082a  00000000  00000000  00001574  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000040  00000000  00000000  00001da0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000126  00000000  00000000  00001de0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000828  00000000  00000000  00001f06  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  0000272e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e4 e8       	ldi	r30, 0x84	; 132
  3a:	f4 e0       	ldi	r31, 0x04	; 4
  3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
  42:	ae 39       	cpi	r26, 0x9E	; 158
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <.do_copy_data_loop>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	ae e9       	ldi	r26, 0x9E	; 158
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a0 3a       	cpi	r26, 0xA0	; 160
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	df d1       	rcall	.+958    	; 0x418 <main>
  5a:	12 c2       	rjmp	.+1060   	; 0x480 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <serial>:
char ch1[]="AT+CMGS=\"7014491563\"";
char ch4[]="Alert!! theft is in the house";
int z;
void serial()
{
UCSRB |= (1<<TXEN) | (1<<RXEN);
  5e:	8a b1       	in	r24, 0x0a	; 10
  60:	88 61       	ori	r24, 0x18	; 24
  62:	8a b9       	out	0x0a, r24	; 10
UCSRC |=(1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0);
  64:	80 b5       	in	r24, 0x20	; 32
  66:	86 68       	ori	r24, 0x86	; 134
  68:	80 bd       	out	0x20, r24	; 32
UBRRL=0x33; 
  6a:	83 e3       	ldi	r24, 0x33	; 51
  6c:	89 b9       	out	0x09, r24	; 9
}
  6e:	08 95       	ret

00000070 <msg>:
void msg()
{
			UDR='A';
  70:	81 e4       	ldi	r24, 0x41	; 65
  72:	8c b9       	out	0x0c, r24	; 12
			while(!(UCSRA & (1<<TXC)));
  74:	5e 9b       	sbis	0x0b, 6	; 11
  76:	fe cf       	rjmp	.-4      	; 0x74 <msg+0x4>
			UCSRA=(1<<TXC);
  78:	80 e4       	ldi	r24, 0x40	; 64
  7a:	8b b9       	out	0x0b, r24	; 11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  7c:	84 ed       	ldi	r24, 0xD4	; 212
  7e:	90 e3       	ldi	r25, 0x30	; 48
  80:	01 97       	sbiw	r24, 0x01	; 1
  82:	f1 f7       	brne	.-4      	; 0x80 <msg+0x10>
			_delay_ms(50);
			UDR='T';
  84:	84 e5       	ldi	r24, 0x54	; 84
  86:	8c b9       	out	0x0c, r24	; 12
			while(!(UCSRA & (1<<TXC)));
  88:	5e 9b       	sbis	0x0b, 6	; 11
  8a:	fe cf       	rjmp	.-4      	; 0x88 <msg+0x18>
			UCSRA=(1<<TXC);
  8c:	80 e4       	ldi	r24, 0x40	; 64
  8e:	8b b9       	out	0x0b, r24	; 11
  90:	84 ed       	ldi	r24, 0xD4	; 212
  92:	90 e3       	ldi	r25, 0x30	; 48
  94:	01 97       	sbiw	r24, 0x01	; 1
  96:	f1 f7       	brne	.-4      	; 0x94 <msg+0x24>
			_delay_ms(50);
			UDR=13;
  98:	8d e0       	ldi	r24, 0x0D	; 13
  9a:	8c b9       	out	0x0c, r24	; 12
			while(!(UCSRA & (1<<TXC)));
  9c:	5e 9b       	sbis	0x0b, 6	; 11
  9e:	fe cf       	rjmp	.-4      	; 0x9c <msg+0x2c>
			UCSRA=(1<<TXC);
  a0:	80 e4       	ldi	r24, 0x40	; 64
  a2:	8b b9       	out	0x0b, r24	; 11
  a4:	84 ed       	ldi	r24, 0xD4	; 212
  a6:	90 e3       	ldi	r25, 0x30	; 48
  a8:	01 97       	sbiw	r24, 0x01	; 1
  aa:	f1 f7       	brne	.-4      	; 0xa8 <msg+0x38>
  ac:	80 e1       	ldi	r24, 0x10	; 16
  ae:	97 e2       	ldi	r25, 0x27	; 39
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  b0:	29 e1       	ldi	r18, 0x19	; 25
  b2:	30 e0       	ldi	r19, 0x00	; 0
  b4:	f9 01       	movw	r30, r18
  b6:	31 97       	sbiw	r30, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <msg+0x46>
  ba:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  bc:	d9 f7       	brne	.-10     	; 0xb4 <msg+0x44>
  be:	80 e1       	ldi	r24, 0x10	; 16
  c0:	97 e2       	ldi	r25, 0x27	; 39
  c2:	29 e1       	ldi	r18, 0x19	; 25
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	f9 01       	movw	r30, r18
  c8:	31 97       	sbiw	r30, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <msg+0x58>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  cc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ce:	d9 f7       	brne	.-10     	; 0xc6 <msg+0x56>
  d0:	80 e1       	ldi	r24, 0x10	; 16
  d2:	97 e2       	ldi	r25, 0x27	; 39
  d4:	29 e1       	ldi	r18, 0x19	; 25
  d6:	30 e0       	ldi	r19, 0x00	; 0
  d8:	f9 01       	movw	r30, r18
  da:	31 97       	sbiw	r30, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <msg+0x6a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  de:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  e0:	d9 f7       	brne	.-10     	; 0xd8 <msg+0x68>
  e2:	80 e1       	ldi	r24, 0x10	; 16
  e4:	97 e2       	ldi	r25, 0x27	; 39
  e6:	29 e1       	ldi	r18, 0x19	; 25
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	f9 01       	movw	r30, r18
  ec:	31 97       	sbiw	r30, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <msg+0x7c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  f0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  f2:	d9 f7       	brne	.-10     	; 0xea <msg+0x7a>
  f4:	80 e1       	ldi	r24, 0x10	; 16
  f6:	97 e2       	ldi	r25, 0x27	; 39
  f8:	29 e1       	ldi	r18, 0x19	; 25
  fa:	30 e0       	ldi	r19, 0x00	; 0
  fc:	f9 01       	movw	r30, r18
  fe:	31 97       	sbiw	r30, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <msg+0x8e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 102:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 104:	d9 f7       	brne	.-10     	; 0xfc <msg+0x8c>
 106:	80 e1       	ldi	r24, 0x10	; 16
 108:	97 e2       	ldi	r25, 0x27	; 39
 10a:	29 e1       	ldi	r18, 0x19	; 25
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	f9 01       	movw	r30, r18
 110:	31 97       	sbiw	r30, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <msg+0xa0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 114:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 116:	d9 f7       	brne	.-10     	; 0x10e <msg+0x9e>
 118:	80 e1       	ldi	r24, 0x10	; 16
 11a:	97 e2       	ldi	r25, 0x27	; 39
 11c:	29 e1       	ldi	r18, 0x19	; 25
 11e:	30 e0       	ldi	r19, 0x00	; 0
 120:	f9 01       	movw	r30, r18
 122:	31 97       	sbiw	r30, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <msg+0xb2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 126:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 128:	d9 f7       	brne	.-10     	; 0x120 <msg+0xb0>
 12a:	80 e1       	ldi	r24, 0x10	; 16
 12c:	97 e2       	ldi	r25, 0x27	; 39
 12e:	29 e1       	ldi	r18, 0x19	; 25
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	f9 01       	movw	r30, r18
 134:	31 97       	sbiw	r30, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <msg+0xc4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 138:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 13a:	d9 f7       	brne	.-10     	; 0x132 <msg+0xc2>
 13c:	80 e1       	ldi	r24, 0x10	; 16
 13e:	97 e2       	ldi	r25, 0x27	; 39
 140:	29 e1       	ldi	r18, 0x19	; 25
 142:	30 e0       	ldi	r19, 0x00	; 0
 144:	f9 01       	movw	r30, r18
 146:	31 97       	sbiw	r30, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <msg+0xd6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 14a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 14c:	d9 f7       	brne	.-10     	; 0x144 <msg+0xd4>
 14e:	80 e1       	ldi	r24, 0x10	; 16
 150:	97 e2       	ldi	r25, 0x27	; 39
 152:	29 e1       	ldi	r18, 0x19	; 25
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	f9 01       	movw	r30, r18
 158:	31 97       	sbiw	r30, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <msg+0xe8>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 15c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 15e:	d9 f7       	brne	.-10     	; 0x156 <msg+0xe6>
 160:	e0 e6       	ldi	r30, 0x60	; 96
 162:	f0 e0       	ldi	r31, 0x00	; 0
			  _delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);
			for(z=0;ch[z]!='\0';z++)
			{
			UDR=ch[z];
			while(!(UCSRA & (1<<TXC)));
			UCSRA=(1<<TXC);
 164:	40 e4       	ldi	r20, 0x40	; 64
 166:	24 ed       	ldi	r18, 0xD4	; 212
 168:	30 e3       	ldi	r19, 0x30	; 48
 16a:	08 c0       	rjmp	.+16     	; 0x17c <msg+0x10c>
			_delay_ms(50);
				_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);
			  _delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);
			for(z=0;ch[z]!='\0';z++)
			{
			UDR=ch[z];
 16c:	8c b9       	out	0x0c, r24	; 12
			while(!(UCSRA & (1<<TXC)));
 16e:	5e 9b       	sbis	0x0b, 6	; 11
 170:	fe cf       	rjmp	.-4      	; 0x16e <msg+0xfe>
			UCSRA=(1<<TXC);
 172:	4b b9       	out	0x0b, r20	; 11
 174:	c9 01       	movw	r24, r18
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <msg+0x106>
 17a:	31 96       	adiw	r30, 0x01	; 1
			while(!(UCSRA & (1<<TXC)));
			UCSRA=(1<<TXC);
			_delay_ms(50);
				_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);
			  _delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);
			for(z=0;ch[z]!='\0';z++)
 17c:	80 81       	ld	r24, Z
 17e:	88 23       	and	r24, r24
 180:	a9 f7       	brne	.-22     	; 0x16c <msg+0xfc>
			UDR=ch[z];
			while(!(UCSRA & (1<<TXC)));
			UCSRA=(1<<TXC);
			_delay_ms(50);
			}
			UDR=13;
 182:	8d e0       	ldi	r24, 0x0D	; 13
 184:	8c b9       	out	0x0c, r24	; 12
			while(!(UCSRA & (1<<TXC)));
 186:	5e 9b       	sbis	0x0b, 6	; 11
 188:	fe cf       	rjmp	.-4      	; 0x186 <msg+0x116>
			UCSRA=(1<<TXC);
 18a:	80 e4       	ldi	r24, 0x40	; 64
 18c:	8b b9       	out	0x0b, r24	; 11
 18e:	80 e1       	ldi	r24, 0x10	; 16
 190:	97 e2       	ldi	r25, 0x27	; 39
 192:	29 e1       	ldi	r18, 0x19	; 25
 194:	30 e0       	ldi	r19, 0x00	; 0
 196:	f9 01       	movw	r30, r18
 198:	31 97       	sbiw	r30, 0x01	; 1
 19a:	f1 f7       	brne	.-4      	; 0x198 <msg+0x128>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 19c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 19e:	d9 f7       	brne	.-10     	; 0x196 <msg+0x126>
 1a0:	80 e1       	ldi	r24, 0x10	; 16
 1a2:	97 e2       	ldi	r25, 0x27	; 39
 1a4:	29 e1       	ldi	r18, 0x19	; 25
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	f9 01       	movw	r30, r18
 1aa:	31 97       	sbiw	r30, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <msg+0x13a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1ae:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1b0:	d9 f7       	brne	.-10     	; 0x1a8 <msg+0x138>
 1b2:	80 e1       	ldi	r24, 0x10	; 16
 1b4:	97 e2       	ldi	r25, 0x27	; 39
 1b6:	29 e1       	ldi	r18, 0x19	; 25
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	f9 01       	movw	r30, r18
 1bc:	31 97       	sbiw	r30, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <msg+0x14c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1c0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1c2:	d9 f7       	brne	.-10     	; 0x1ba <msg+0x14a>
 1c4:	80 e1       	ldi	r24, 0x10	; 16
 1c6:	97 e2       	ldi	r25, 0x27	; 39
 1c8:	29 e1       	ldi	r18, 0x19	; 25
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	f9 01       	movw	r30, r18
 1ce:	31 97       	sbiw	r30, 0x01	; 1
 1d0:	f1 f7       	brne	.-4      	; 0x1ce <msg+0x15e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1d2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1d4:	d9 f7       	brne	.-10     	; 0x1cc <msg+0x15c>
 1d6:	80 e1       	ldi	r24, 0x10	; 16
 1d8:	97 e2       	ldi	r25, 0x27	; 39
 1da:	29 e1       	ldi	r18, 0x19	; 25
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	f9 01       	movw	r30, r18
 1e0:	31 97       	sbiw	r30, 0x01	; 1
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <msg+0x170>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1e4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1e6:	d9 f7       	brne	.-10     	; 0x1de <msg+0x16e>
 1e8:	80 e1       	ldi	r24, 0x10	; 16
 1ea:	97 e2       	ldi	r25, 0x27	; 39
 1ec:	29 e1       	ldi	r18, 0x19	; 25
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	f9 01       	movw	r30, r18
 1f2:	31 97       	sbiw	r30, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <msg+0x182>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1f6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1f8:	d9 f7       	brne	.-10     	; 0x1f0 <msg+0x180>
 1fa:	80 e1       	ldi	r24, 0x10	; 16
 1fc:	97 e2       	ldi	r25, 0x27	; 39
 1fe:	29 e1       	ldi	r18, 0x19	; 25
 200:	30 e0       	ldi	r19, 0x00	; 0
 202:	f9 01       	movw	r30, r18
 204:	31 97       	sbiw	r30, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <msg+0x194>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 208:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 20a:	d9 f7       	brne	.-10     	; 0x202 <msg+0x192>
 20c:	80 e1       	ldi	r24, 0x10	; 16
 20e:	97 e2       	ldi	r25, 0x27	; 39
 210:	29 e1       	ldi	r18, 0x19	; 25
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	f9 01       	movw	r30, r18
 216:	31 97       	sbiw	r30, 0x01	; 1
 218:	f1 f7       	brne	.-4      	; 0x216 <msg+0x1a6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 21a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 21c:	d9 f7       	brne	.-10     	; 0x214 <msg+0x1a4>
 21e:	80 e1       	ldi	r24, 0x10	; 16
 220:	97 e2       	ldi	r25, 0x27	; 39
 222:	29 e1       	ldi	r18, 0x19	; 25
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	f9 01       	movw	r30, r18
 228:	31 97       	sbiw	r30, 0x01	; 1
 22a:	f1 f7       	brne	.-4      	; 0x228 <msg+0x1b8>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 22c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 22e:	d9 f7       	brne	.-10     	; 0x226 <msg+0x1b6>
 230:	80 e1       	ldi	r24, 0x10	; 16
 232:	97 e2       	ldi	r25, 0x27	; 39
 234:	29 e1       	ldi	r18, 0x19	; 25
 236:	30 e0       	ldi	r19, 0x00	; 0
 238:	f9 01       	movw	r30, r18
 23a:	31 97       	sbiw	r30, 0x01	; 1
 23c:	f1 f7       	brne	.-4      	; 0x23a <msg+0x1ca>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 23e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 240:	d9 f7       	brne	.-10     	; 0x238 <msg+0x1c8>
 242:	ea e6       	ldi	r30, 0x6A	; 106
 244:	f0 e0       	ldi	r31, 0x00	; 0

			for(z=0;ch1[z]!='\0';z++)
			{
			UDR=ch1[z];
			while(!(UCSRA & (1<<TXC)));
			UCSRA=(1<<TXC);
 246:	40 e4       	ldi	r20, 0x40	; 64
 248:	24 ed       	ldi	r18, 0xD4	; 212
 24a:	30 e3       	ldi	r19, 0x30	; 48
 24c:	08 c0       	rjmp	.+16     	; 0x25e <msg+0x1ee>
			_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);
			  _delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);

			for(z=0;ch1[z]!='\0';z++)
			{
			UDR=ch1[z];
 24e:	8c b9       	out	0x0c, r24	; 12
			while(!(UCSRA & (1<<TXC)));
 250:	5e 9b       	sbis	0x0b, 6	; 11
 252:	fe cf       	rjmp	.-4      	; 0x250 <msg+0x1e0>
			UCSRA=(1<<TXC);
 254:	4b b9       	out	0x0b, r20	; 11
 256:	c9 01       	movw	r24, r18
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <msg+0x1e8>
 25c:	31 96       	adiw	r30, 0x01	; 1
			while(!(UCSRA & (1<<TXC)));
			UCSRA=(1<<TXC);
			_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);
			  _delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);

			for(z=0;ch1[z]!='\0';z++)
 25e:	80 81       	ld	r24, Z
 260:	88 23       	and	r24, r24
 262:	a9 f7       	brne	.-22     	; 0x24e <msg+0x1de>
			while(!(UCSRA & (1<<TXC)));
			UCSRA=(1<<TXC);
			_delay_ms(50);
			}
			
			UDR=13;
 264:	8d e0       	ldi	r24, 0x0D	; 13
 266:	8c b9       	out	0x0c, r24	; 12
			while(!(UCSRA & (1<<TXC)));
 268:	5e 9b       	sbis	0x0b, 6	; 11
 26a:	fe cf       	rjmp	.-4      	; 0x268 <msg+0x1f8>
			UCSRA=(1<<TXC);
 26c:	80 e4       	ldi	r24, 0x40	; 64
 26e:	8b b9       	out	0x0b, r24	; 11
 270:	80 e1       	ldi	r24, 0x10	; 16
 272:	97 e2       	ldi	r25, 0x27	; 39
 274:	29 e1       	ldi	r18, 0x19	; 25
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	f9 01       	movw	r30, r18
 27a:	31 97       	sbiw	r30, 0x01	; 1
 27c:	f1 f7       	brne	.-4      	; 0x27a <msg+0x20a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 27e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 280:	d9 f7       	brne	.-10     	; 0x278 <msg+0x208>
 282:	80 e1       	ldi	r24, 0x10	; 16
 284:	97 e2       	ldi	r25, 0x27	; 39
 286:	29 e1       	ldi	r18, 0x19	; 25
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	f9 01       	movw	r30, r18
 28c:	31 97       	sbiw	r30, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <msg+0x21c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 290:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 292:	d9 f7       	brne	.-10     	; 0x28a <msg+0x21a>
 294:	80 e1       	ldi	r24, 0x10	; 16
 296:	97 e2       	ldi	r25, 0x27	; 39
 298:	29 e1       	ldi	r18, 0x19	; 25
 29a:	30 e0       	ldi	r19, 0x00	; 0
 29c:	f9 01       	movw	r30, r18
 29e:	31 97       	sbiw	r30, 0x01	; 1
 2a0:	f1 f7       	brne	.-4      	; 0x29e <msg+0x22e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2a2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2a4:	d9 f7       	brne	.-10     	; 0x29c <msg+0x22c>
 2a6:	80 e1       	ldi	r24, 0x10	; 16
 2a8:	97 e2       	ldi	r25, 0x27	; 39
 2aa:	29 e1       	ldi	r18, 0x19	; 25
 2ac:	30 e0       	ldi	r19, 0x00	; 0
 2ae:	f9 01       	movw	r30, r18
 2b0:	31 97       	sbiw	r30, 0x01	; 1
 2b2:	f1 f7       	brne	.-4      	; 0x2b0 <msg+0x240>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2b4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2b6:	d9 f7       	brne	.-10     	; 0x2ae <msg+0x23e>
 2b8:	80 e1       	ldi	r24, 0x10	; 16
 2ba:	97 e2       	ldi	r25, 0x27	; 39
 2bc:	29 e1       	ldi	r18, 0x19	; 25
 2be:	30 e0       	ldi	r19, 0x00	; 0
 2c0:	f9 01       	movw	r30, r18
 2c2:	31 97       	sbiw	r30, 0x01	; 1
 2c4:	f1 f7       	brne	.-4      	; 0x2c2 <msg+0x252>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2c6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2c8:	d9 f7       	brne	.-10     	; 0x2c0 <msg+0x250>
 2ca:	80 e1       	ldi	r24, 0x10	; 16
 2cc:	97 e2       	ldi	r25, 0x27	; 39
 2ce:	29 e1       	ldi	r18, 0x19	; 25
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	f9 01       	movw	r30, r18
 2d4:	31 97       	sbiw	r30, 0x01	; 1
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <msg+0x264>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2d8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2da:	d9 f7       	brne	.-10     	; 0x2d2 <msg+0x262>
 2dc:	80 e1       	ldi	r24, 0x10	; 16
 2de:	97 e2       	ldi	r25, 0x27	; 39
 2e0:	29 e1       	ldi	r18, 0x19	; 25
 2e2:	30 e0       	ldi	r19, 0x00	; 0
 2e4:	f9 01       	movw	r30, r18
 2e6:	31 97       	sbiw	r30, 0x01	; 1
 2e8:	f1 f7       	brne	.-4      	; 0x2e6 <msg+0x276>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2ea:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2ec:	d9 f7       	brne	.-10     	; 0x2e4 <msg+0x274>
 2ee:	80 e1       	ldi	r24, 0x10	; 16
 2f0:	97 e2       	ldi	r25, 0x27	; 39
 2f2:	29 e1       	ldi	r18, 0x19	; 25
 2f4:	30 e0       	ldi	r19, 0x00	; 0
 2f6:	f9 01       	movw	r30, r18
 2f8:	31 97       	sbiw	r30, 0x01	; 1
 2fa:	f1 f7       	brne	.-4      	; 0x2f8 <msg+0x288>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2fc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2fe:	d9 f7       	brne	.-10     	; 0x2f6 <msg+0x286>
 300:	80 e1       	ldi	r24, 0x10	; 16
 302:	97 e2       	ldi	r25, 0x27	; 39
 304:	29 e1       	ldi	r18, 0x19	; 25
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	f9 01       	movw	r30, r18
 30a:	31 97       	sbiw	r30, 0x01	; 1
 30c:	f1 f7       	brne	.-4      	; 0x30a <msg+0x29a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 30e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 310:	d9 f7       	brne	.-10     	; 0x308 <msg+0x298>
 312:	80 e1       	ldi	r24, 0x10	; 16
 314:	97 e2       	ldi	r25, 0x27	; 39
 316:	29 e1       	ldi	r18, 0x19	; 25
 318:	30 e0       	ldi	r19, 0x00	; 0
 31a:	f9 01       	movw	r30, r18
 31c:	31 97       	sbiw	r30, 0x01	; 1
 31e:	f1 f7       	brne	.-4      	; 0x31c <msg+0x2ac>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 320:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 322:	d9 f7       	brne	.-10     	; 0x31a <msg+0x2aa>
 324:	ef e7       	ldi	r30, 0x7F	; 127
 326:	f0 e0       	ldi	r31, 0x00	; 0
 328:	20 e0       	ldi	r18, 0x00	; 0
 32a:	30 e0       	ldi	r19, 0x00	; 0

			 for(z=0;ch4[z]!='\0';z++)
			 {
			  UDR=ch4[z];
			  while(!(UCSRA & (1<<TXC)));
			  UCSRA=(1<<TXC);
 32c:	60 e4       	ldi	r22, 0x40	; 64
 32e:	44 ed       	ldi	r20, 0xD4	; 212
 330:	50 e3       	ldi	r21, 0x30	; 48
 332:	0a c0       	rjmp	.+20     	; 0x348 <msg+0x2d8>
			  _delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);


			 for(z=0;ch4[z]!='\0';z++)
			 {
			  UDR=ch4[z];
 334:	8c b9       	out	0x0c, r24	; 12
			  while(!(UCSRA & (1<<TXC)));
 336:	5e 9b       	sbis	0x0b, 6	; 11
 338:	fe cf       	rjmp	.-4      	; 0x336 <msg+0x2c6>
			  UCSRA=(1<<TXC);
 33a:	6b b9       	out	0x0b, r22	; 11
 33c:	ca 01       	movw	r24, r20
 33e:	01 97       	sbiw	r24, 0x01	; 1
 340:	f1 f7       	brne	.-4      	; 0x33e <msg+0x2ce>
 342:	2f 5f       	subi	r18, 0xFF	; 255
 344:	3f 4f       	sbci	r19, 0xFF	; 255
 346:	31 96       	adiw	r30, 0x01	; 1
			UCSRA=(1<<TXC);
			_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);
			  _delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);


			 for(z=0;ch4[z]!='\0';z++)
 348:	80 81       	ld	r24, Z
 34a:	88 23       	and	r24, r24
 34c:	99 f7       	brne	.-26     	; 0x334 <msg+0x2c4>
 34e:	20 93 9e 00 	sts	0x009E, r18
 352:	30 93 9f 00 	sts	0x009F, r19
 356:	80 e1       	ldi	r24, 0x10	; 16
 358:	97 e2       	ldi	r25, 0x27	; 39
 35a:	29 e1       	ldi	r18, 0x19	; 25
 35c:	30 e0       	ldi	r19, 0x00	; 0
 35e:	f9 01       	movw	r30, r18
 360:	31 97       	sbiw	r30, 0x01	; 1
 362:	f1 f7       	brne	.-4      	; 0x360 <msg+0x2f0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 364:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 366:	d9 f7       	brne	.-10     	; 0x35e <msg+0x2ee>
 368:	80 e1       	ldi	r24, 0x10	; 16
 36a:	97 e2       	ldi	r25, 0x27	; 39
 36c:	29 e1       	ldi	r18, 0x19	; 25
 36e:	30 e0       	ldi	r19, 0x00	; 0
 370:	f9 01       	movw	r30, r18
 372:	31 97       	sbiw	r30, 0x01	; 1
 374:	f1 f7       	brne	.-4      	; 0x372 <msg+0x302>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 376:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 378:	d9 f7       	brne	.-10     	; 0x370 <msg+0x300>
 37a:	80 e1       	ldi	r24, 0x10	; 16
 37c:	97 e2       	ldi	r25, 0x27	; 39
 37e:	29 e1       	ldi	r18, 0x19	; 25
 380:	30 e0       	ldi	r19, 0x00	; 0
 382:	f9 01       	movw	r30, r18
 384:	31 97       	sbiw	r30, 0x01	; 1
 386:	f1 f7       	brne	.-4      	; 0x384 <msg+0x314>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 388:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 38a:	d9 f7       	brne	.-10     	; 0x382 <msg+0x312>
 38c:	80 e1       	ldi	r24, 0x10	; 16
 38e:	97 e2       	ldi	r25, 0x27	; 39
 390:	29 e1       	ldi	r18, 0x19	; 25
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	f9 01       	movw	r30, r18
 396:	31 97       	sbiw	r30, 0x01	; 1
 398:	f1 f7       	brne	.-4      	; 0x396 <msg+0x326>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 39a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 39c:	d9 f7       	brne	.-10     	; 0x394 <msg+0x324>
 39e:	80 e1       	ldi	r24, 0x10	; 16
 3a0:	97 e2       	ldi	r25, 0x27	; 39
 3a2:	29 e1       	ldi	r18, 0x19	; 25
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	f9 01       	movw	r30, r18
 3a8:	31 97       	sbiw	r30, 0x01	; 1
 3aa:	f1 f7       	brne	.-4      	; 0x3a8 <msg+0x338>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 3ac:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 3ae:	d9 f7       	brne	.-10     	; 0x3a6 <msg+0x336>
 3b0:	80 e1       	ldi	r24, 0x10	; 16
 3b2:	97 e2       	ldi	r25, 0x27	; 39
 3b4:	29 e1       	ldi	r18, 0x19	; 25
 3b6:	30 e0       	ldi	r19, 0x00	; 0
 3b8:	f9 01       	movw	r30, r18
 3ba:	31 97       	sbiw	r30, 0x01	; 1
 3bc:	f1 f7       	brne	.-4      	; 0x3ba <msg+0x34a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 3be:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 3c0:	d9 f7       	brne	.-10     	; 0x3b8 <msg+0x348>
 3c2:	80 e1       	ldi	r24, 0x10	; 16
 3c4:	97 e2       	ldi	r25, 0x27	; 39
 3c6:	29 e1       	ldi	r18, 0x19	; 25
 3c8:	30 e0       	ldi	r19, 0x00	; 0
 3ca:	f9 01       	movw	r30, r18
 3cc:	31 97       	sbiw	r30, 0x01	; 1
 3ce:	f1 f7       	brne	.-4      	; 0x3cc <msg+0x35c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 3d0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 3d2:	d9 f7       	brne	.-10     	; 0x3ca <msg+0x35a>
 3d4:	80 e1       	ldi	r24, 0x10	; 16
 3d6:	97 e2       	ldi	r25, 0x27	; 39
 3d8:	29 e1       	ldi	r18, 0x19	; 25
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	f9 01       	movw	r30, r18
 3de:	31 97       	sbiw	r30, 0x01	; 1
 3e0:	f1 f7       	brne	.-4      	; 0x3de <msg+0x36e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 3e2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 3e4:	d9 f7       	brne	.-10     	; 0x3dc <msg+0x36c>
 3e6:	80 e1       	ldi	r24, 0x10	; 16
 3e8:	97 e2       	ldi	r25, 0x27	; 39
 3ea:	29 e1       	ldi	r18, 0x19	; 25
 3ec:	30 e0       	ldi	r19, 0x00	; 0
 3ee:	f9 01       	movw	r30, r18
 3f0:	31 97       	sbiw	r30, 0x01	; 1
 3f2:	f1 f7       	brne	.-4      	; 0x3f0 <msg+0x380>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 3f4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 3f6:	d9 f7       	brne	.-10     	; 0x3ee <msg+0x37e>
 3f8:	80 e1       	ldi	r24, 0x10	; 16
 3fa:	97 e2       	ldi	r25, 0x27	; 39
 3fc:	29 e1       	ldi	r18, 0x19	; 25
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	f9 01       	movw	r30, r18
 402:	31 97       	sbiw	r30, 0x01	; 1
 404:	f1 f7       	brne	.-4      	; 0x402 <msg+0x392>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 406:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 408:	d9 f7       	brne	.-10     	; 0x400 <msg+0x390>
			  UCSRA=(1<<TXC);
			  _delay_ms(50);
			  }
			  _delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);
			  _delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);_delay_ms(1000);
			UDR=26;
 40a:	8a e1       	ldi	r24, 0x1A	; 26
 40c:	8c b9       	out	0x0c, r24	; 12
			while(!(UCSRA & (1<<TXC)));
 40e:	5e 9b       	sbis	0x0b, 6	; 11
 410:	fe cf       	rjmp	.-4      	; 0x40e <msg+0x39e>
			UCSRA=(1<<TXC);
 412:	80 e4       	ldi	r24, 0x40	; 64
 414:	8b b9       	out	0x0b, r24	; 11
}
 416:	08 95       	ret

00000418 <main>:

int main()
{
 418:	ef 92       	push	r14
 41a:	ff 92       	push	r15
 41c:	0f 93       	push	r16
 41e:	1f 93       	push	r17
DDRD=!(1<<5) | !(1<<6) | !(1<<7) | (1<<2)| (1<<3);
 420:	8c e0       	ldi	r24, 0x0C	; 12
 422:	81 bb       	out	0x11, r24	; 17
DDRC=!(1<<1);
 424:	14 ba       	out	0x14, r1	; 20
DDRB=(1<<1) | !(1<<6) | (1<<3) | (1<<4);
 426:	8a e1       	ldi	r24, 0x1A	; 26
 428:	87 bb       	out	0x17, r24	; 23
int z;
void serial()
{
UCSRB |= (1<<TXEN) | (1<<RXEN);
UCSRC |=(1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0);
UBRRL=0x33; 
 42a:	83 e3       	ldi	r24, 0x33	; 51
 42c:	e8 2e       	mov	r14, r24
DDRD=!(1<<5) | !(1<<6) | !(1<<7) | (1<<2)| (1<<3);
DDRC=!(1<<1);
DDRB=(1<<1) | !(1<<6) | (1<<3) | (1<<4);
p:
serial();
PORTB=(1<<0);
 42e:	ff 24       	eor	r15, r15
 430:	f3 94       	inc	r15
msg();
goto p;
}
if(!(PINB & (1<<6)))         //light sensor check
{
PORTB=(1<<4);
 432:	00 e1       	ldi	r16, 0x10	; 16
goto p;
}
if((PINC & (1<<1)))        //human detection sensor
{
//PORTD=(1<<2);               //safe current
PORTB=(1<<1) | (1<<3);               // safe buzzer
 434:	1a e0       	ldi	r17, 0x0A	; 10
char ch1[]="AT+CMGS=\"7014491563\"";
char ch4[]="Alert!! theft is in the house";
int z;
void serial()
{
UCSRB |= (1<<TXEN) | (1<<RXEN);
 436:	8a b1       	in	r24, 0x0a	; 10
 438:	88 61       	ori	r24, 0x18	; 24
 43a:	8a b9       	out	0x0a, r24	; 10
UCSRC |=(1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0);
 43c:	80 b5       	in	r24, 0x20	; 32
 43e:	86 68       	ori	r24, 0x86	; 134
 440:	80 bd       	out	0x20, r24	; 32
UBRRL=0x33; 
 442:	e9 b8       	out	0x09, r14	; 9
DDRD=!(1<<5) | !(1<<6) | !(1<<7) | (1<<2)| (1<<3);
DDRC=!(1<<1);
DDRB=(1<<1) | !(1<<6) | (1<<3) | (1<<4);
p:
serial();
PORTB=(1<<0);
 444:	f8 ba       	out	0x18, r15	; 24
while(1)
{
if(!(PIND & (1<<5)))        //on switch
 446:	85 99       	sbic	0x10, 5	; 16
 448:	12 c0       	rjmp	.+36     	; 0x46e <__stack+0xf>
{
while(!(PIND & (1<<5)));
 44a:	85 9b       	sbis	0x10, 5	; 16
 44c:	fe cf       	rjmp	.-4      	; 0x44a <main+0x32>
 44e:	0c c0       	rjmp	.+24     	; 0x468 <__stack+0x9>
while(PIND & (1<<6))
{
if(!(PIND & (1<<7)))         //mic
 450:	87 9b       	sbis	0x10, 7	; 16
 452:	02 c0       	rjmp	.+4      	; 0x458 <main+0x40>
//PORTD=(1<<2);               //safe current
PORTB=(1<<1) | (1<<3);               // safe buzzer
msg();
goto p;
}
if((PINC & (1<<1)))        //human detection sensor
 454:	99 9b       	sbis	0x13, 1	; 19
 456:	03 c0       	rjmp	.+6      	; 0x45e <main+0x46>
{
//PORTD=(1<<2);               //safe current
PORTB=(1<<1) | (1<<3);               // safe buzzer
 458:	18 bb       	out	0x18, r17	; 24
msg();
 45a:	0a de       	rcall	.-1004   	; 0x70 <msg>
 45c:	ec cf       	rjmp	.-40     	; 0x436 <main+0x1e>
goto p;
}
if(!(PINB & (1<<6)))         //light sensor check
 45e:	b6 99       	sbic	0x16, 6	; 22
 460:	02 c0       	rjmp	.+4      	; 0x466 <__stack+0x7>
{
PORTB=(1<<4);
 462:	08 bb       	out	0x18, r16	; 24
 464:	01 c0       	rjmp	.+2      	; 0x468 <__stack+0x9>
}
else
PORTB=!(1<<4);
 466:	18 ba       	out	0x18, r1	; 24
while(1)
{
if(!(PIND & (1<<5)))        //on switch
{
while(!(PIND & (1<<5)));
while(PIND & (1<<6))
 468:	86 99       	sbic	0x10, 6	; 16
 46a:	f2 cf       	rjmp	.-28     	; 0x450 <main+0x38>
 46c:	ec cf       	rjmp	.-40     	; 0x446 <main+0x2e>
}
else
PORTB=!(1<<4);
}
}
else if(!(PIND & (1<<6)))   //off switch
 46e:	86 99       	sbic	0x10, 6	; 16
 470:	ea cf       	rjmp	.-44     	; 0x446 <main+0x2e>
{
while(!(PIND & (1<<6)));
 472:	86 9b       	sbis	0x10, 6	; 16
 474:	fe cf       	rjmp	.-4      	; 0x472 <__stack+0x13>
 476:	01 c0       	rjmp	.+2      	; 0x47a <__stack+0x1b>
while(PIND & (1<<5))
{
//PORTD=!(1<<2);               //safe current off
PORTB=!(1<<1) | !(1<<3);               //safe current off buzzer off
 478:	18 ba       	out	0x18, r1	; 24
}
}
else if(!(PIND & (1<<6)))   //off switch
{
while(!(PIND & (1<<6)));
while(PIND & (1<<5))
 47a:	85 99       	sbic	0x10, 5	; 16
 47c:	fd cf       	rjmp	.-6      	; 0x478 <__stack+0x19>
 47e:	e3 cf       	rjmp	.-58     	; 0x446 <main+0x2e>

00000480 <_exit>:
 480:	f8 94       	cli

00000482 <__stop_program>:
 482:	ff cf       	rjmp	.-2      	; 0x482 <__stop_program>
